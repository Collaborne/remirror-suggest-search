{
	"name": "@collaborne/remirror-search-editor",
  "description": "Search editor with suggesters build with Remirror",
	"version": "0.0.1",
	"type": "module",
	"main": "dist/index.js",
	"source": "src/index.tsx",
  "license": "UNLICENSED",
	"engines": {
		"npm": ">=10.8.1",
		"node": ">=20"
	},
	"scripts": {
		"dev:update-i18n": "tx push -s && tx pull -af",
		"lint": "npm run lint:ts && npm run lint:spacing",
		"lint:ts": "npx eslint --report-unused-disable-directives $(node -p 'require(\"./tsconfig.test.json\").include.map(include => `'\\${include}.\\{js,ts,tsx\\}'`).join(\" \")')",
		"lint:spacing": "if grep -nE '[0-9]+px' $(find . -path ./.git -prune -o -type f -name '*.tsx' -print | git check-ignore --verbose --non-matching --stdin | sed -n -e 's,\t./,\t,' -e 's,^::\t*,,p'); then printf '\nERROR: Use theme.spacing()\n\n' >&2; exit 1; fi",
		"build": "npm run build:locales && npm run build:assets && npm run build:tsc --",
		"build:tsc": "tsc --noEmit false -p tsconfig.build.json",
		"build:assets": "copyfiles -u 1 'src/**/*.png' dist/",
		"build:locales": "cross-env TS_NODE_PROJECT=tasks/tsconfig.json TS_NODE_COMPILER_OPTIONS='{ \"module\": \"commonjs\" }' node -r ts-node/register -r source-map-support/register tasks/prepare-locales.ts .storybook/locales",
		"build:watch": "npm run build:locales && npm run build:assets && tsc-watch -p tsconfig.build.json --noEmit false --onSuccess \"yalc push --watch\"",
		"test": "run-s lint test:build test:unit",
		"test:build": "npm run build:locales",
		"test:unit": "cross-env CI=1 SKIP_PREFLIGHT_CHECK=true NODE_OPTIONS=--experimental-vm-modules npm run test:unit:internal --",
		"test:watch": "cross-env SKIP_PREFLIGHT_CHECK=true npm run test:unit:internal --",
		"test:unit:internal": "npx jest",
		"predeploy": "run-s storybook:build",
		"deploy": "gh-pages -d storybook-static",
		"storybook": "npm run build:locales && NODE_OPTIONS=\"${NODE_OPTIONS} --openssl-legacy-provider\" FAST_REFRESH=false storybook dev -p 9009",
		"storybook:build": "npm run build:locales && NODE_OPTIONS=\"${NODE_OPTIONS} --openssl-legacy-provider\" storybook build --quiet"
	},
	"dependencies": {
		"@reactuses/core": "^5.0.21",
		"@remirror/pm": "^2.0.0",
		"@remirror/react": "^2.0.0",
		"@remirror/styles": "^2.0.0",
		"prosemirror-model": "^1.18.3",
		"prosemirror-state": "^1.4.2",
		"prosemirror-view": "^1.29.1",
		"react": "^18.3.1",
		"react-dom": "^18.3.1",
		"remirror": "^2.0.39",
		"search-query-parser": "^1.6.0"
	},
	"devDependencies": {
		"@testing-library/jest-dom": "6.4.2",
		"@types/jest": "^28.1.8",
		"ts-jest": "^29.1.2",
		"jest-environment-jsdom": "^29.7.0",
		"@collaborne/tsconfig-react": "^1.0.3",
		"@storybook/addon-actions": "^8.0.4",
		"@storybook/addon-controls": "^8.0.4",
		"@storybook/addon-toolbars": "^8.0.4",
		"@storybook/react": "^8.0.4",
		"@storybook/react-vite": "^8.0.4",
		"@types/lodash": "^4.17.7",
		"@types/mkdirp": "^1.0.2",
		"@types/node": "^20.16.1",
		"@types/react": "^18.3.3",
		"@types/react-dom": "^18.3.0",
		"@vitejs/plugin-react": "^4.3.1",
		"cross-env": "^7.0.3",
		"eslint": "^8.18.0",
		"@eslint/js": "^9.9.0",
		"eslint-config-collaborne": "^5.3.1",
		"eslint-config-prettier": "^8.5.0",
		"eslint-config-standard-react": "^11.0.1",
		"eslint-plugin-disable": "^2.0.3",
		"eslint-plugin-import": "^2.26.0",
		"eslint-plugin-jest": "^26.5.3",
		"eslint-plugin-node": "^11.1.0",
		"eslint-plugin-prettier": "^4.0.0",
		"eslint-plugin-promise": "^6.0.0",
		"eslint-plugin-react": "^7.30.1",
		"eslint-plugin-react-hooks": "^4.6.0",
		"eslint-plugin-storybook": "^0.8.0",
		"globals": "^15.9.0",
		"jest": "^29.7.0",
		"mkdirp": "^1.0.4",
		"prettier": "^2.7.1",
		"react-intl-universal": "^2.5.3",
		"source-map-support": "^0.5.21",
		"storybook": "^8.0.4",
		"ts-node": "^10.8.1",
		"tsconfig-collaborne": "^1.8.1",
		"tsconfig-paths": "^4.2.0",
		"tss-react": "^4.4.0",
		"typescript": "^5.5.3",
		"typescript-eslint": "^8.0.1",
		"vite": "^5.4.1"
	},
	"overrides": {
		"typescript": "^5.5.3",
		"eslint-config-standard-react": {
			"eslint": "^8"
		}
	},
	"files": [
		"assets",
		"dist",
		"locales",
		"src",
		"tsconfig.json"
	]
}
